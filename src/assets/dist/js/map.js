(function(){function L(){const c=document.querySelector("#overlaps");if(!c)return;const v=c.querySelectorAll("thead th");v.forEach(f=>{f.addEventListener("click",()=>{const C=c.querySelector("tbody"),n=Array.from(C.querySelectorAll("tr")),a=Array.from(v).indexOf(f),p=f.classList.contains("asc");v.forEach(s=>{s.classList.remove("asc","desc");const t=s.querySelector(".sort-icon");t&&(t.style.display="none")}),n.sort((s,t)=>{const g=s.children[a].textContent.trim(),y=t.children[a].textContent.trim();return p?g.localeCompare(y):y.localeCompare(g)}),n.forEach(s=>C.appendChild(s)),f.classList.toggle("asc",!p),f.classList.toggle("desc",p);let d=f.querySelector(".sort-icon");d.style.display="inline"})})}(function(){const c={true:{hex:"#15803d",tw:"text-green-700"},false:{hex:"#be123c",tw:"text-red-700"}};function v(n){console.log("Flashing element:",n),n.classList.add("flash"),setTimeout(()=>{n.classList.remove("flash")},1e3)}function f(n){let a=!0;const p=1.05,d=.95;let s=0;const t=2,g=n.getRadius(),y=1500;function $(){if(s>=t)return;let i=n.getRadius(),u=i*.0085;a?(i+=u,i>=g*p&&(a=!1)):(i-=u,i<=g*d&&(a=!0,s++)),n.setRadius(i),n.setOptions({fillOpacity:.35*(i/g)}),s<t&&setTimeout($,y/60)}$()}function C(){console.log("Initializing map...");const n=new google.maps.Map(document.getElementById("map"),{center:{lat:37.0902,lng:-95.7129},zoom:4}),a=[],p=new google.maps.LatLngBounds,d=new google.maps.InfoWindow;fetch("/leadflex/map/locations").then(s=>(console.log("Fetching locations..."),s.json())).then(s=>{console.log("Locations fetched:",s),s.forEach(t=>{if(!t.location.coords.lat||!t.location.coords.lng){console.error("Invalid coordinates for job:",t.title);return}console.log("Creating circle for location:",t.title);const g=new google.maps.Circle({strokeColor:t.circle.strokeColor??c[t.advertiseJob].hex,strokeOpacity:t.circle.strokeOpacity??.8,strokeWeight:t.circle.strokeWeight??2,fillColor:t.circle.fillColor??c[t.advertiseJob].hex,fillOpacity:t.circle.fillOpacity??.35,map:n,center:t.location.coords,radius:t.hiringRadius});p.extend(t.location.coords),a.push({circle:g,id:t.id,title:t.title,data:t}),g.addListener("click",y=>{console.log(`Circle for ${t.title} clicked at:`,y.latLng);const $=y.latLng,i=[];if(a.forEach(({circle:u,data:o})=>{const e=u.getCenter(),m=google.maps.geometry.spherical.computeDistanceBetween(e,$);console.log(`Checking circle for ${o.title}: Distance = ${m}, Radius = ${u.getRadius()}`),m<=u.getRadius()&&(console.log(`Circle for ${o.title} overlaps with click location.`),i.push(o))}),i.length>0){console.log("Overlapping jobs found:",i);const u=document.querySelector("#overlaps tbody");u.innerHTML="";let o="<div class='info-window-content'>";i.forEach((e,m)=>{let x=(e.advertiseJob?"check":"x")+"-square-fill",l=document.createElement("svg");l.className=`h-4 w-4 mx-2 ${c[e.advertiseJob].tw}`;let w=document.createElement("use");w.setAttribute("xlink:href",`#${x}`),l.appendChild(w);const h=document.createElement("tr");h.className="border-t border-gray-300 job-info",h.dataset.job=JSON.stringify(e),h.dataset.jobId=e.id;let r="px-4 py-2 border-b border-gray-300";h.innerHTML=`
                  <td class="">${e.title}</td>
                  <td class="${r}">${e.types.driver}</td>
                  <td class="${r}">${e.types.trailer}</td>
                  <td class="${r}">${e.types.job}</td>
                  <td class="${r}">${e.location.city}</td>
                  <td class="${r}">${e.location.state}</td>
                  <td class="${r}">${Math.round(e.hiringRadius/1609.34)}</td>
                  <td class="${r}">${e.assignedCampaigns}</td>
                   <td class="${r}">
                        <div class="flex items-center justify-center" data-modal-triggers>
                            <svg class="h-4 w-4 mx-2 ${e.advertiseJob?c[e.advertiseJob].tw:""}" data-advertise=true>
                                <use xlink:href="#check-square-fill"></use>
                            </svg>
                            <svg class="h-4 w-4 mx-2 ${e.advertiseJob?"":c[e.advertiseJob].tw}" data-advertise=false>
                                <use xlink:href="#x-square-fill"></use>
                            </svg>
                        </div>
                    </td>
                    <td class="${r}">
                    <a href="${e.url}" target="_blank" class="text-blue-500 hover:underline">View Job</a> 
                  </td>
                `,u.appendChild(h),l.className=`h-2 w-2 mr-1 ${c[e.advertiseJob].tw}`,o+=`<div class='job-info py-2' data-job-id='${e.id}'>`,o+=`<a class="underline blue-700" href='${e.url}' target='_blank'>`,o+=`<h3><span class="flex items-center">${l.outerHTML}${e.title}</span></h3>`,o+="</a>",o+="<ul class='list-disc pl-6'>",o+=`<li><strong>Driver Type:</strong> ${e.types.driver}</li>`,o+=`<li><strong>Trailer Type:</strong> ${e.types.trailer}</li>`,o+=`<li><strong>Job Type:</strong> ${e.types.job}</li>`,o+=`<li><strong>City:</strong> ${e.location.city}</li>`,o+=`<li><strong>Assigned Campaign:</strong> ${e.assignedCampaigns?e.assignedCampaigns:"<i>none</i>"}</li>`,o+="</ul>",o+="</div>",m<i.length-1&&(o+="<hr>")}),o+="</div>",d.close(),d.setContent(o),d.setPosition($),d.open(n),google.maps.event.addListenerOnce(d,"domready",()=>{const e=document.querySelector(".gm-ui-hover-effect");e&&e.focus(),document.querySelectorAll(".job-info").forEach(m=>{console.log(m),m.addEventListener("click",x=>{x.preventDefault();const l=parseInt(m.getAttribute("data-job-id"));if(isNaN(l)){console.error("Invalid jobId:",l);return}console.log("Job info clicked:",l);const w=a.find(k=>k.data.id===l);w?f(w.circle):console.error("Circle not found for job:",l);const h=document.querySelector(`tr[data-job-id="${l}"]`);h?v(h):console.error("Row not found for job:",l);const r=document.querySelector(`.info-window-content .job-info[data-job-id="${l}"]`);r?v(r):console.error("Info window not found")})})}),L()}else console.log("No overlapping circles found.")})}),n.fitBounds(p)}).catch(s=>console.error("Error fetching locations:",s))}window.onload=C})();
//# sourceMappingURL=map.js.map
})()