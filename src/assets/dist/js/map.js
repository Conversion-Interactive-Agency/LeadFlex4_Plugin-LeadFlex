(function(){function S(){const g=document.querySelector("#overlaps");if(!g)return;const h=g.querySelectorAll("thead th");h.forEach(f=>{f.addEventListener("click",()=>{const C=g.querySelector("tbody"),i=Array.from(C.querySelectorAll("tr")),c=Array.from(h).indexOf(f),u=f.classList.contains("asc");h.forEach(l=>{l.classList.remove("asc","desc");const r=l.querySelector(".sort-icon");r&&(r.style.display="none")}),i.sort((l,r)=>{const m=l.children[c].textContent.trim(),d=r.children[c].textContent.trim();return u?m.localeCompare(d):d.localeCompare(m)}),i.forEach(l=>C.appendChild(l)),f.classList.toggle("asc",!u),f.classList.toggle("desc",u);let y=f.querySelector(".sort-icon");y.style.display="inline"})})}(function(){const g={true:{hex:"#15803d",tw:"text-green-700"},false:{hex:"#be123c",tw:"text-red-700"}};function h(i){console.log("Flashing element:",i),i.classList.add("flash"),setTimeout(()=>{i.classList.remove("flash")},1e3)}function f(i){let c=!0;const u=1.05,y=.95;let l=0;const r=2,m=i.getRadius(),d=1500;function x(){if(l>=r)return;let t=i.getRadius(),$=t*.0085;c?(t+=$,t>=m*u&&(c=!1)):(t-=$,t<=m*y&&(c=!0,l++)),i.setRadius(t),i.setOptions({fillOpacity:.35*(t/m)}),l<r&&setTimeout(x,d/60)}x()}function C(){console.log("Initializing map...");const i=document.getElementById("map"),c=document.getElementById("loading-indicator"),u=new google.maps.Map(document.getElementById("map"),{center:{lat:37.0902,lng:-95.7129},zoom:4}),y=[],l=new google.maps.LatLngBounds,r=new google.maps.InfoWindow,m=i.dataset.fetchLocationsUrl??"/leadflex/map/locations";fetch(m).then(d=>(console.log("Fetching locations..."),d.json())).then(d=>{console.log("Locations fetched:",d);const x=d.data;c&&(c.style.display="none"),x.forEach(t=>{if(!t.location.coords.lat||!t.location.coords.lng){console.error("Invalid coordinates for job:",t.title);return}console.log("Creating circle for location:",t.title);const $=new google.maps.Circle({strokeColor:t.circle.strokeColor??g[t.advertiseJob].hex,strokeOpacity:t.circle.strokeOpacity??.8,strokeWeight:t.circle.strokeWeight??2,fillColor:t.circle.fillColor??g[t.advertiseJob].hex,fillOpacity:t.circle.fillOpacity??.6,map:u,center:t.location.coords,radius:t.hiringRadius});l.extend(t.location.coords),y.push({circle:$,id:t.id,title:t.title,data:t}),$.addListener("click",k=>{console.log(`Circle for ${t.title} clicked at:`,k.latLng);const E=k.latLng,w=[];if(y.forEach(({circle:v,data:o})=>{const e=v.getCenter(),p=google.maps.geometry.spherical.computeDistanceBetween(e,E);console.log(`Checking circle for ${o.title}: Distance = ${p}, Radius = ${v.getRadius()}`),p<=v.getRadius()&&(console.log(`Circle for ${o.title} overlaps with click location.`),w.push(o))}),w.length>0){console.log("Overlapping jobs found:",w);const v=document.querySelector("#overlaps tbody");v.innerHTML="";let o="<div class='info-window-content'>";w.forEach((e,p)=>{let T=(e.advertiseJob?"check":"x")+"-square-fill",a=document.createElement("svg");a.className=`h-4 w-4 mx-2 ${g[e.advertiseJob].tw}`;let L=document.createElement("use");L.setAttribute("xlink:href",`#${T}`),a.appendChild(L);const n=document.createElement("tr");n.className="border-t border-gray-300 job-info",n.dataset.job=JSON.stringify(e),n.dataset.jobId=e.id;let s="px-4 py-2 border-b border-gray-300";n.innerHTML+=`<td class="${s}">${e.title}</td>`,n.innerHTML+=`<td class="${s}">${e.company.name}</td>`,n.innerHTML+=`<td class="${s}">${e.types.driver}</td>`,n.innerHTML+=`<td class="${s}">${e.types.trailer}</td>`,n.innerHTML+=`<td class="${s}">${e.types.job}</td>`,n.innerHTML+=`<td class="${s}">${e.location.city}</td>`,n.innerHTML+=`<td class="${s}">${e.location.state}</td>`,n.innerHTML+=`<td class="${s}">${Math.round(e.hiringRadius/1609.34)}</td>`,n.innerHTML+=`<td class="${s}">${e.assignedCampaigns}</td>`,n.innerHTML+=`<td class="${s}">
                                    <div class="flex items-center justify-center" data-modal-triggers>
                                        <svg class="h-4 w-4 mx-2 ${e.advertiseJob?g[e.advertiseJob].tw:""}" data-advertise=true>
                                            <use xlink:href="#check-square-fill"></use>
                                        </svg>
                                        <svg class="h-4 w-4 mx-2 ${e.advertiseJob?"":g[e.advertiseJob].tw}" data-advertise=false>
                                            <use xlink:href="#x-square-fill"></use>
                                        </svg>
                                    </div>
                                  </td>`,n.innerHTML+=`<td class="${s}">
                                    <a href="${e.url}" target="_blank" class="text-blue-500 hover:underline">View Job</a> 
                                  </td>`,v.appendChild(n),a.className=`h-2 w-2 mr-1 ${g[e.advertiseJob].tw}`,o+=`<div class='job-info py-2' data-job-id='${e.id}'>`,o+=`<a class="underline blue-700" href='${e.url}' target='_blank'>`,o+=`<h3><span class="flex items-center">${a.outerHTML}${e.title}</span></h3>`,o+="</a>",o+="<ul class='list-disc pl-6'>",o+=`<li><strong>Company Name:</strong> ${e.company.name}</li>`,o+=`<li><strong>Driver Type:</strong> ${e.types.driver}</li>`,o+=`<li><strong>Trailer Type:</strong> ${e.types.trailer}</li>`,o+=`<li><strong>Job Type:</strong> ${e.types.job}</li>`,o+=`<li><strong>City:</strong> ${e.location.city}</li>`,o+=`<li><strong>Assigned Campaign:</strong> ${e.assignedCampaigns?e.assignedCampaigns:"<i>none</i>"}</li>`,o+="</ul>",o+="</div>",p<w.length-1&&(o+="<hr>")}),o+="</div>",r.close(),r.setContent(o),r.setPosition(E),r.open(u),google.maps.event.addListenerOnce(r,"domready",()=>{const e=document.querySelector(".gm-ui-hover-effect");e&&e.focus(),document.querySelectorAll(".job-info").forEach(p=>{console.log(p),p.addEventListener("click",T=>{T.preventDefault();const a=parseInt(p.getAttribute("data-job-id"));if(isNaN(a)){console.error("Invalid jobId:",a);return}console.log("Job info clicked:",a);const L=y.find(M=>M.data.id===a);L?f(L.circle):console.error("Circle not found for job:",a);const n=document.querySelector(`tr[data-job-id="${a}"]`);n?h(n):console.error("Row not found for job:",a);const s=document.querySelector(`.info-window-content .job-info[data-job-id="${a}"]`);s?h(s):console.error("Info window not found")})})}),S()}else console.log("No overlapping circles found.")})}),u.fitBounds(l)}).catch(d=>{console.error("Error fetching locations:",d),c&&(c.style.display="none")})}window.onload=C})();
//# sourceMappingURL=map.js.map
})()